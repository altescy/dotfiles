###  APPEARANCE
[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
    let g:airline_powerline_fonts = 0

    let g:airline#extensions#ale#enabled = 1
    let g:airline#extensions#coc#enabled = 1
    let g:airline#extensions#coc#show_coc_status = 1
    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#buffer_nr_show = 1
    let g:airline#extensions#whitespace#mixed_indent_algo = 1

    nmap <S-Tab> <Plug>AirlineSelectPrevTab
    nmap <Tab> <Plug>AirlineSelectNextTab
'''

[[plugins]]
repo = 'lifepillar/vim-solarized8'
hook_add = '''
    set termguicolors
    colorscheme solarized8
    let g:solarized_termtrans = 1
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
hook_add = '''
    let g:airline_theme = 'transparent'
'''

[[plugins]]
repo = 'kat0h/vim-auto-color-switcher'
hook_post_update =  '''
    let g:dein#plugin.build = 'make'
'''
hook_add = '''
    if system('command -v ostheme') != ''
        " Use ostheme command to detect os appearance theme.
        " See the following link for more details about ostheme:
        "     https://github.com/altescy/ostheme
        let g:auto_color_switcher#binary_path = 'ostheme --observe'
    elseif !has('mac')
        let g:auto_color_switcher#disable = v:true
    endif
    let g:auto_color_switcher#command={
    \ 'light': 'set background=light',
    \ 'dark': 'set background=dark'
    \}
'''

### UTILITIES
[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
hook_add = '''
    " GoTo code navigation.
    nmap <silent> gd <Plug>(coc-definition)
    nmap <silent> gy <Plug>(coc-type-definition)
    nmap <silent> gi <Plug>(coc-implementation)
    nmap <silent> gr <Plug>(coc-references)

    " Use K to show documentation in preview window.
    nnoremap <silent> K :call <SID>show_documentation()<CR>

    function! s:show_documentation()
      if (index(['vim','help'], &filetype) >= 0)
        execute 'h '.expand('<cword>')
      elseif (coc#rpc#ready())
        call CocActionAsync('doHover')
      else
        execute '!' . &keywordprg . " " . expand('<cword>')
      endif
    endfunction
'''

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
    let g:ale_sign_column_always = 1
    let g:ale_fix_on_save = 1
    let g:ale_completion_enabled = 0
    let g:ale_sign_error = 'X'
    let g:ale_sign_warning = '!'
    let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
    let g:ale_linters = {
    \   'go': ['staticcheck'],
    \}
    let g:ale_fixers = {
    \   '*': ['remove_trailing_lines', 'trim_whitespace'],
    \   'c': ['clang-format'],
    \   'cpp': ['clang-format'],
    \   'go': ['goimports', 'gofmt'],
    \   'python': ['black', 'isort'],
    \   'rust': ['rustfmt'],
    \   'nim': ['nimpretty'],
    \   'crystal': ['crystal'],
    \}
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
    let g:NERDTreeShowHidden=1
    map <C-n> :NERDTreeToggle<CR>

    let g:NERDTreeIgnore = [
    \ '\.DS_Store', '\.Trashes', '\.history',
    \ '\.git$',  '__pycache__', '\.py[cod]$', '\.mypy_cache', '\.pytest_cache', '\.venv', '\.ipynb_checkpoints'
    \ ]
'''

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
    let g:indentLine_char = 'â”Š'
'''

[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'junegunn/goyo.vim'
hook_add = '''
    let g:goyo_width = 119
'''

[[plugins]]
repo = 'junegunn/limelight.vim'

[[plugins]]
repo = 'junegunn/fzf'
build = './install --bin'

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''
    map <C-p> :Files<CR>

    let s:preview_cmd = 'cat {}'
    if system('command -v bat') != ''
        let s:bat_theme = "Solarized (dark)"
        if &background == "light"
            let s:bat_theme = "Solarized (light)"
        endif
        let s:preview_cmd = 'bat --color=always --theme "' . s:bat_theme . '" {}'
    endif

    command! -bang -nargs=? -complete=dir Files
    \ call fzf#vim#files(<q-args>, {
    \   'options': ['--layout=reverse', '--info=inline', '--preview', s:preview_cmd]
    \ }, <bang>0)
'''

[[plugins]]
repo = "airblade/vim-gitgutter"

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'github/copilot.vim'
