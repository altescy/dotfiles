###  APPEARANCE
[[plugins]]
repo = 'kien/rainbow_parentheses.vim'

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
    let g:airline_powerline_fonts = 0
    let g:airline#extensions#tabline#enabled = 1
    " let g:airline#extensions#tabline#buffer_idx_mode = 1
    let g:airline#extensions#tabline#buffer_nr_show = 1
    let g:airline#extensions#whitespace#mixed_indent_algo = 1
    let g:airline#extensions#ale#enabled = 1
    nmap <S-Tab> <Plug>AirlineSelectPrevTab
    nmap <Tab> <Plug>AirlineSelectNextTab
'''

[[plugins]]
repo = 'lifepillar/vim-solarized8'
hook_add = '''
    set termguicolors
    colorscheme solarized8
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
hook_add = '''
    let g:airline_theme = 'solarized'
'''

[[plugins]]
repo = 'kat0h/vim-auto-color-switcher'
hook_post_update =  '''
    let g:dein#plugin.build = 'make'
'''
hook_add = '''
    if !has('mac')
        let g:auto_color_switcher#desable = v:true
    endif
    let g:auto_color_switcher#command={
    \ 'light': 'set background=light',
    \ 'dark': 'set background=dark'
    \}
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'

### UTILITIES
[[plugins]]
repo = 'neoclide/coc.nvim'
rev="release"
hook_add = '''
    " GoTo code navigation.
    nmap <silent> gd <Plug>(coc-definition)
    nmap <silent> gy <Plug>(coc-type-definition)
    nmap <silent> gi <Plug>(coc-implementation)
    nmap <silent> gr <Plug>(coc-references)

    " Use K to show documentation in preview window.
    nnoremap <silent> K :call <SID>show_documentation()<CR>

    function! s:show_documentation()
      if (index(['vim','help'], &filetype) >= 0)
        execute 'h '.expand('<cword>')
      elseif (coc#rpc#ready())
        call CocActionAsync('doHover')
      else
        execute '!' . &keywordprg . " " . expand('<cword>')
      endif
    endfunction
'''

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
    let g:ale_sign_column_always = 1
    let g:ale_fix_on_save = 1
    let g:ale_completion_enabled = 0
    let g:ale_sign_error = 'X'
    let g:ale_sign_warning = '!'
    let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
    let g:ale_linters = {
    \   'go': ['golint'],
    \}
    let g:ale_fixers = {
    \   '*': ['remove_trailing_lines', 'trim_whitespace'],
    \   'go': ['goimports', 'gofmt'],
    \   'python': ['black', 'isort'],
    \   'rust': ['rustfmt'],
    \}
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = 'map <C-n> :NERDTreeToggle<CR>'

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'Townk/vim-autoclose'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'

[[plugins]]
repo = 'junegunn/goyo.vim'
hook_add = '''
    let g:goyo_width = 119
'''

[[plugins]]
repo = 'junegunn/limelight.vim'

[[plugins]]
repo = 'junegunn/fzf'
build = './install --bin'
merged = 0

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
